(* Program 3 *)
 (* Fibbonacci numbers *)
PROGRAM IS
  TYPE IARRAY IS ARRAY OF INTEGER;
  VAR N := 40;
      I := 0;
      fibbs := IARRAY [<N OF 0>];
      j := 0;
      n := 0;
 PROCEDURE init(a : IARRAY) IS
  VAR i : INTEGER := 0;
  BEGIN
    a[0] := 1;
    a[1] := 1;
    FOR i := 2 TO N - 1 DO
      a[i] := I;
    END;
  END;
 PROCEDURE fibb(i: INTEGER) : INTEGER IS
  BEGIN
   IF fibbs[i] = I THEN
     fibbs[i] := fibb(i-2) + fibb(i-1);
   END;
   RETURN fibbs[i];
 END;
 BEGIN
  init(fibbs);
  WRITE("Enter indices of eight fibbonacci numbers:");
  FOR j := 0 TO 7 DO
    READ(n);
    IF n > N THEN  (* A bug -- should be >= N *)
      WRITE("Maximum index is ", N);
    ELSE
      WRITE(n, " ", fibb(n));
    END;
  END;
 END;
 (* Program 4 *)
 (* Queens *)
 PROGRAM IS
 TYPE BARRAY IS ARRAY OF BOOLEAN;
     IARRAY IS ARRAY OF INTEGER;
 VAR i: INTEGER := 0;
 up, down := BARRAY [<15 OF TRUE>];
 rows := BARRAY [<15 OF TRUE>];
 x := IARRAY [<8 OF 0 >];
 PROCEDURE print() IS
  BEGIN
    WRITE(x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7]);
  END;
 PROCEDURE queens(c : INTEGER) IS
  VAR r := 0;
  BEGIN
    FOR r := 0 TO 7 DO
      IF rows[r] AND up[r-c+7] AND down[r+c] THEN
rows[r] := FALSE;
 up[r-c+7] := FALSE;
 down[r+c] := FALSE;
 x[c] := r;
 IF c = 7 THEN print(); ELSE queens (c+1); END;
 rows[r] := TRUE; up[r-c+7] := TRUE; down[r+c] := TRUE;
 END;
 END;
 END;
 BEGIN
 queens(0);
 END;